<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="7bbd8c2c-0d53-4fc4-aa7b-7b8b2e05fa8a" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Persons/Persons.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Persons/Persons.js" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1kyfoTpP46Mb3QkD3SYXgYEO0EQ" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="dart.analysis.tool.window.visible" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../../Projects/clustermanager" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="yarn" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Nuwan\Personal Projects\react-complete-guide\src\components" />
      <recent name="C:\Nuwan\Personal Projects\react-complete-guide\src\containers" />
      <recent name="C:\Nuwan\Personal Projects\react-complete-guide\src\Persons" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7bbd8c2c-0d53-4fc4-aa7b-7b8b2e05fa8a" name="Default Changelist" comment="" />
      <created>1606677929539</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1606677929539</updated>
      <workItem from="1606677931383" duration="26000" />
      <workItem from="1606677959233" duration="624000" />
      <workItem from="1606707855562" duration="31000" />
      <workItem from="1606762675649" duration="1326000" />
      <workItem from="1607253433337" duration="8812000" />
      <workItem from="1607312495507" duration="19190000" />
      <workItem from="1607917838422" duration="52000" />
      <workItem from="1608055089032" duration="8966000" />
      <workItem from="1608465111327" duration="7200000" />
      <workItem from="1608837344499" duration="626000" />
      <workItem from="1608839587383" duration="649000" />
      <workItem from="1608840687338" duration="194000" />
      <workItem from="1608886577369" duration="4526000" />
    </task>
    <task id="LOCAL-00001" summary="Fixing loading issue">
      <created>1606762956851</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1606762956851</updated>
    </task>
    <task id="LOCAL-00002" summary="5. Styling React Components &amp; Elements:9. Styled Components &amp; Dynamic Styles">
      <created>1607273325683</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1607273325683</updated>
    </task>
    <task id="LOCAL-00003" summary="5. Styling React Components &amp; Elements:10. Working with CSS Modules">
      <created>1607276307166</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1607276307166</updated>
    </task>
    <task id="LOCAL-00004" summary="5. Styling React Components &amp; Elements:11. CSS Modules &amp; Media Queries">
      <created>1607276878024</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1607276878024</updated>
    </task>
    <task id="LOCAL-00005" summary="6. Debugging React Apps:5. Using Error Boundaries (React 16+)">
      <created>1607278982276</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1607278982276</updated>
    </task>
    <task id="LOCAL-00006" summary="7. Diving Deeper into Components &amp; React Internals:2. A Better Project Structure">
      <created>1607797624500</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1607797624500</updated>
    </task>
    <task id="LOCAL-00007" summary="7. Diving Deeper into Components &amp; React Internals:3. Splitting an App Into Components">
      <created>1607801095907</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1607801095907</updated>
    </task>
    <task id="LOCAL-00008" summary="7. Diving Deeper into Components &amp; React Internal:5. Class-based vs Functional Components">
      <created>1607849565587</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1607849565587</updated>
    </task>
    <task id="LOCAL-00009" summary="7. Diving Deeper into Components &amp; React Internals:7. Component Creation Lifecycle in Action">
      <created>1607885929639</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1607885929639</updated>
    </task>
    <task id="LOCAL-00010" summary="7. Diving Deeper into Components &amp; React Internals:8. Component Update Lifecycle (for props Changes)">
      <created>1608059295488</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1608059295488</updated>
    </task>
    <task id="LOCAL-00011" summary="7. Diving Deeper into Components &amp; React Internals:10. Using useEffect() in Functional Components">
      <created>1608229493975</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1608229493975</updated>
    </task>
    <task id="LOCAL-00012" summary="7. Diving Deeper into Components &amp; React Internals:11. Controlling the useEffect() Behavior">
      <created>1608230304224</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1608230304224</updated>
    </task>
    <task id="LOCAL-00013" summary="  7. Diving Deeper into Components &amp; React Internals:12. Cleaning up with Lifecycle Hooks &amp; useEffect()">
      <created>1608467790214</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1608467790214</updated>
    </task>
    <task id="LOCAL-00014" summary=" 7. Diving Deeper into Components &amp; React Internals:13. Cleanup Work with useEffect() - Example">
      <created>1608468405925</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1608468405925</updated>
    </task>
    <task id="LOCAL-00015" summary=" 7. Diving Deeper into Components &amp; React Internals:14. Using shouldComponentUpdate for Optimization">
      <created>1608469324703</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1608469324703</updated>
    </task>
    <task id="LOCAL-00016" summary=" 7. Diving Deeper into Components &amp; React Internals:15. Optimizing Functional Components with React.memo()">
      <created>1609071378555</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1609071378555</updated>
    </task>
    <option name="localTasksCounter" value="17" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Fixing loading issue" />
    <MESSAGE value="5. Styling React Components &amp; Elements:9. Styled Components &amp; Dynamic Styles" />
    <MESSAGE value="5. Styling React Components &amp; Elements:10. Working with CSS Modules" />
    <MESSAGE value="5. Styling React Components &amp; Elements:11. CSS Modules &amp; Media Queries" />
    <MESSAGE value="6. Debugging React Apps:5. Using Error Boundaries (React 16+)" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internals:2. A Better Project Structure" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internals:3. Splitting an App Into Components" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internal:5. Class-based vs Functional Components" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internals:7. Component Creation Lifecycle in Action" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internals:8. Component Update Lifecycle (for props Changes)" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internals:10. Using useEffect() in Functional Components" />
    <MESSAGE value="7. Diving Deeper into Components &amp; React Internals:11. Controlling the useEffect() Behavior" />
    <MESSAGE value="  7. Diving Deeper into Components &amp; React Internals:12. Cleaning up with Lifecycle Hooks &amp; useEffect()" />
    <MESSAGE value=" 7. Diving Deeper into Components &amp; React Internals:13. Cleanup Work with useEffect() - Example" />
    <MESSAGE value=" 7. Diving Deeper into Components &amp; React Internals:14. Using shouldComponentUpdate for Optimization" />
    <MESSAGE value=" 7. Diving Deeper into Components &amp; React Internals:15. Optimizing Functional Components with React.memo()" />
    <option name="LAST_COMMIT_MESSAGE" value=" 7. Diving Deeper into Components &amp; React Internals:15. Optimizing Functional Components with React.memo()" />
  </component>
</project>